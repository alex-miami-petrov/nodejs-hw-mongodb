# tags:
#   - Contacts
# summary: Get list of contacts
# operationId: getContacts
# description: 'Get list of contacts with this endpoint'
# security:
#   - bearerAuth: []
# parameters:
#   - in: query
#     name: page
#     schema:
#       type: integer
#     example: 1
#   - in: query
#     name: perPage
#     schema:
#       type: integer
#       example: 10
#   - in: query
#     name: sortBy
#     schema:
#       type: string
#       example: 'name'
#     description: "All contacts's fields can be mentioned. Default value - _id"
#   - in: query
#     name: sortOrder
#     schema:
#       type: string
#       enum: ['asc', 'desc']
#       example: 'asc'
#   - in: query
#     name: isFavourite
#     schema:
#       type: boolean
#       example: true

# responses:
#   '200':
#     description: Successfully found contacts!
#     content:
#       application/json:
#         schema:
#           type: object
#           required:
#             - status
#             - message
#             - data
#           properties:
#             status:
#               type: integer
#               example: 200
#             message:
#               type: string
#               example: Successfully found contacts!
#             data:
#               type: object
#               required:
#                 - data
#                 - page
#                 - perPage
#                 - totalItems
#                 - totalPages
#                 - hasNextPage
#                 - hasPreviousPage
#               properties:
#                 data:
#                   type: array
#                   items:
#                     $ref: '../../components/schemas/contact.yaml'
#                 page:
#                   type: number
#                   example: 2
#                 perPage:
#                   type: number
#                   example: 4
#                 totalItems:
#                   type: number
#                   example: 4
#                 totalPages:
#                   type: number
#                   example: 4
#                 hasNextPage:
#                   type: boolean
#                   example: false
#                 hasPreviousPage:
#                   type: boolean
#                   example: true
#   '401':
#     $ref: '../../components/responses/401.yaml'

tags:
  - Contacts
summary: Get list of contacts
operationId: getContacts
description: Retrieve a filtered and paginated list of contacts.
security:
  - bearerAuth: []
parameters:
  - in: query
    name: name
    schema:
      type: string
    description: Filter by contact name (partial match supported).
    example: 'John'
  - in: query
    name: phoneNumber
    schema:
      type: string
    description: Filter by contact phone number.
    example: '380678345590'
  - in: query
    name: email
    schema:
      type: string
      format: email
    description: Filter by contact email address.
    example: 'john.doe@example.com'
  - in: query
    name: isFavourite
    schema:
      type: boolean
    description: Filter by whether the contact is marked as favourite.
    example: true
  - in: query
    name: contactType
    schema:
      type: string
      enum: [work, home, personal]
    description: Filter by contact type.
    example: 'work'
  - in: query
    name: page
    schema:
      type: integer
    description: Page number for pagination.
    example: 1
  - in: query
    name: perPage
    schema:
      type: integer
    description: Number of items per page.
    example: 10
responses:
  '200':
    description: Successfully retrieved filtered and paginated contacts.
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Successfully retrieved contacts.
            data:
              type: object
              required:
                - data
                - page
                - perPage
                - totalItems
                - totalPages
                - hasNextPage
                - hasPreviousPage
              properties:
                data:
                  type: array
                  items:
                    $ref: '../../components/schemas/contact.yaml'
                page:
                  type: number
                  example: 1
                perPage:
                  type: number
                  example: 10
                totalItems:
                  type: number
                  example: 100
                totalPages:
                  type: number
                  example: 10
                hasNextPage:
                  type: boolean
                  example: true
                hasPreviousPage:
                  type: boolean
                  example: false
  '400':
    description: Invalid query parameters.
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 400
            message:
              type: string
              example: Invalid query parameters provided.
  '500':
    $ref: '../../components/responses/500.yaml'
